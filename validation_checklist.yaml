Q1:
  identityProvider:
    fileData:
      name: htpass-secret
    mappingMethod: claim
    name: htpass-exam
    type: HTPasswd
  project: openshift-config
  secret:
    data:
      htpasswd: htpasswd file content
    name: htpass-secret
    type: Opaque
  users:
  - name: neil
    password: moonwalk
  - name: buzz
    password: eaglehaslanded
Q10:
  deployment:
    env:
      name: Decoder_Ring
      valueFrom:
        secretKeyRef:
          key: Decoder_Ring
          name: magic
    name: qed
  project: math
Q11:
  deployment:
    name: oranges
    serviceAccountName: ex280-sa
  project: apples
  scc:
    name: anyuid
    user: system:serviceaccount:apples:ex280-sa
  serviceAccount:
    name: ex280-sa
Q12:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: gamma
  project: space
  pv:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 1Gi
    claimRef:
      name: gamma-pvc
      namespace: space
    name: gamma-pv
    nfs:
      path: /exports-ocp4
      server: 192.168.50.254
  pvc:
    accessModes:
    - ReadWriteMany
    name: gamma-pvc
    resources:
      requests:
        storage: 1Gi
Q13:
  clusterRoleBinding:
    role: cluster-admin
    serviceAccount: marathon:ex280-ocpsa
  cronJob:
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - image: quay.io/redhattraining/scaling
              name: scaling
            serviceAccountName: ex280-ocpsa
    name: scaling
    schedule: 5 4 2 * *
    successfulJobsHistoryLimit: 13
  project: marathon
  serviceAccount:
    name: ex280-ocpsa
Q14:
  deployment:
    livenessProbe:
      initialDelaySeconds: 3
      tcpSocket:
        port: 8080
      timeoutSeconds: 10
    name: gamma
  project: space
Q15:
  networkPolicy:
  - name: deny-all
    spec:
      egress: []
      ingress: []
      podSelector: {}
      policyTypes:
      - Ingress
      - Egress
  - name: allow-specific
    spec:
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: bluewills
          podSelector: {}
        ports:
        - port: 8080
          protocol: TCP
      podSelector:
        matchLabels:
          deployment: mercury
      policyTypes:
      - Ingress
  project: atlas
Q16:
  operator:
    channel: stable
    name: file-integrity
    updateStrategy: Automatic
  project: openshift-file-integrity
Q17:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: voyager
  project: path-finder
Q18:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: mercury
  networkPolicy:
  - name: deny-all
    spec:
      egress: []
      ingress: []
      podSelector: {}
      policyTypes:
      - Ingress
      - Egress
  - name: allow-specific
    spec:
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: bluewills
          podSelector: {}
        ports:
        - port: 8080
          protocol: TCP
      podSelector:
        matchLabels:
          deployment: mercury
      policyTypes:
      - Ingress
  project: atlas
Q19:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: gamma
    volumeMounts:
    - mountPath: /data
      name: gamma-pvc
  project: space
  pv:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 1Gi
    claimRef:
      name: gamma-pvc
      namespace: space
    name: gamma-pv
    nfs:
      path: /exports-ocp4
      server: 192.168.50.254
  pvc:
    accessModes:
    - ReadWriteMany
    name: gamma-pvc
    resources:
      requests:
        storage: 1Gi
Q2:
  clusterRoleBindings:
  - role: cluster-admin
    user: neil
  - role: self-provisioner
    user: buzz
  removeUser: kubeadmin
Q20:
  bootstrapProjectTemplate:
    name: project-request
    objects:
    - apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        annotations:
          openshift.io/description: ${PROJECT_DESCRIPTION}
          openshift.io/display-name: ${PROJECT_DISPLAYNAME}
          openshift.io/requester: ${PROJECT_REQUESTING_USER}
        name: ${PROJECT_NAME}
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: admin
        namespace: ${PROJECT_NAME}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: admin
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: ${PROJECT_ADMIN_USER}
    - apiVersion: v1
      kind: ResourceQuota
      metadata:
        name: ${PROJECT_NAME}-quota
      spec:
        hard:
          limits.cpu: '4'
          limits.memory: 4Gi
          pods: '10'
          requests.cpu: '2'
          requests.memory: 1Gi
    - apiVersion: v1
      kind: LimitRange
      metadata:
        name: ${PROJECT_NAME}-limitrange
      spec:
        limits:
        - default:
            cpu: 100m
            memory: 100Mi
          defaultRequest:
            cpu: 30m
            memory: 30Mi
          type: Container
    parameters:
    - name: PROJECT_NAME
    - name: PROJECT_DISPLAYNAME
    - name: PROJECT_DESCRIPTION
    - name: PROJECT_ADMIN_USER
    - name: PROJECT_REQUESTING_USER
Q21:
  deployment:
    livenessProbe:
      initialDelaySeconds: 3
      tcpSocket:
        port: 8080
      timeoutSeconds: 10
    name: gamma
  mustGather:
    destDir: /root/ex280-clusterdata
  project: space
  tarArchive:
    archivePath: /root/ex280-clusterdata.tar.gz
    sourceDir: /root/ex280-clusterdata
Q22:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: gamma
  project: space
  route:
    host: space.apps.ocp4.example.com
    name: gamma
  volumeMounts:
  - mountPath: /srv
    name: gamma-pvc
Q3:
  project: apollo
  quota:
    hard:
      limits.cpu: '2'
      limits.memory: 1Gi
      pods: '3'
      services: '2'
    name: apollo-quota
Q4:
  limitRange:
    limits:
    - max:
        cpu: 500m
        memory: 300Mi
      min:
        cpu: 10m
        memory: 100Mi
      type: Pod
    - defaultRequest:
        cpu: 100m
        memory: 100Mi
      max:
        cpu: 500m
        memory: 300Mi
      min:
        cpu: 10m
        memory: 100Mi
      type: Container
    name: titan-limits
  project: titan
Q5:
  deployment:
    image: quay.io/redhattraining/hello-openshift
    name: rocky
  project: bluewills
  route:
    host: rocky.apps.ocp4.example.com
    name: rocky
Q6:
  deployment:
    image: quay.io/redhattraining/hello-world-nginx
    name: oxcart
  project: area51
  route:
    host: oxcart.apps.ocp4.example.com
    name: oxcart
    tls:
      certificate: self-signed cert content
      key: self-signed key content
      termination: edge
Q7:
  deployment:
    name: hydra
    replicas: 5
  project: lerna
Q8:
  deployment:
    name: scala
    resources:
      limits:
        cpu: 100m
      requests:
        cpu: 25m
  hpa:
    cpuPercent: 60
    maxReplicas: 40
    minReplicas: 6
    name: scala
  project: gru
Q9:
  project: math
  secret:
    data:
      Decoder_Ring: ASDA142hfh-gfrhhueo-erfdk345v
    name: magic
    type: Opaque
